geom_hline(yintercept = 0, linetype = "dashed", colour = "darkgrey")
#base::load(snakemake@input[[2]])
base::load("../../temp/clean/any_ancestry/model_summaries_additive.RData")
strata_lookup <- c("Yes" = "Breastfed",
"No" = "Bottlefed",
"Missing" = "Missing")
summary_stats_plots <-
summary_stats_plots%>%
mutate(variant = stringi::stri_extract_first_regex(variant, "rs.+[0-9]"),
stratum = recode(stratum, !!!strata_lookup))
summary_stats_plots %>%
filter(outcome %in% cognitive_measures,
variant == "rs174575") %>%
ggplot(aes(x = outcome, y = estimate)) +
geom_pointrange(aes(colour = stratum,
group = variant,
ymin = estimate - 1.96*std.error,
ymax = estimate + 1.96*std.error),
position = position_dodge2(width = 0.8),
fatten = 0,
shape = 3
) +
scale_y_continuous()+
facet_grid(~ covariates) +
theme_bw() +
#ggsci::scale_colour_npg()+
ggplot2::discrete_scale("colour", "uq", palette_constructor(colours = colours_uq("Red", "Aqua", "Green", "Blue", palette = "secondary"), type = "discrete"))+
labs(#title = "SNP effect estimate by breastfeeding status",
#subtitle = "Error bars represent 95% confidence intervals",
colour = "Breastfeeding status",
y = "Regression coefficient (z-scores)",
x = "") +
theme(axis.text.x = element_text(angle = 45, hjust=1),
legend.position = "bottom",
plot.margin = margin(10,10,10,50))+
geom_hline(yintercept = 0, linetype = "dashed", colour = "darkgrey")
```{r cognitive-measures-forest-plot-supplementary-any-ancestry, echo=FALSE, fig.height=4, fig.width=10}
#base::load(snakemake@input[[2]])
base::load("../../temp/clean/any_ancestry/model_summaries_additive.RData")
strata_lookup <- c("Yes" = "Breastfed",
"No" = "Bottlefed",
"Missing" = "Missing")
summary_stats_plots <-
summary_stats_plots%>%
mutate(variant = stringi::stri_extract_first_regex(variant, "rs.+[0-9]"),
stratum = recode(stratum, !!!strata_lookup))
summary_stats_plots %>%
filter(outcome %in% cognitive_measures,
variant == "rs174575") %>%
ggplot(aes(x = outcome, y = estimate)) +
geom_pointrange(aes(colour = stratum,
group = variant,
ymin = estimate - 1.96*std.error,
ymax = estimate + 1.96*std.error),
position = position_dodge2(width = 0.8),
fatten = 0,
shape = 3
) +
scale_y_continuous()+
facet_grid(~ covariates) +
theme_bw() +
#ggsci::scale_colour_npg()+
ggplot2::discrete_scale("colour", "uq", palette_constructor(colours = colours_uq("Red", "Aqua", "Green", "Blue", palette = "secondary"), type = "discrete"))+
labs(#title = "SNP effect estimate by breastfeeding status",
#subtitle = "Error bars represent 95% confidence intervals",
colour = "Breastfeeding status",
y = "Regression coefficient (z-scores)",
x = "") +
theme(axis.text.x = element_text(angle = 45, hjust=1),
legend.position = "bottom",
plot.margin = margin(10,10,10,50))+
geom_hline(yintercept = 0, linetype = "dashed", colour = "darkgrey")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(purrr)
library(broom)
library(ggplot2)
library(stringi)
library(forcats)
library(tidyr)
library(tibble)
base::load("../../temp/clean/white_british/data.RData")
#base::load(snakemake@input[[3]])
data_fluid_intelligence <-
list_continuous_multiple_delivery_first_instance_breastfeeding[["fluid_intelligence"]] %>%
full_join(common_data, by = "eid") %>%
mutate(breastfed_as_a_baby = na_if(breastfed_as_a_baby, "Missing") %>%
fct_drop(),
breastfed_as_a_baby = case_when(breastfed_as_a_baby == "Yes" ~ 1,
breastfed_as_a_baby == "No" ~ 0,
TRUE ~ NA_real_),
rs1535_GG = as.numeric(rs1535_GG),
rs174575_GG = as.numeric(rs174575_GG),
rs174583_TT = as.numeric(rs174583_TT)
) %>%
drop_na()
# Formulas
formula_unadj <- function(
SNP_name){
model <- formula(
paste("fluid_intelligence ~",
# SNP
SNP_name,
# Main covariates
" + delivery +",
paste0(SNP_name, "*breastfed_as_a_baby")
))
}
## Outcome ~ SNP + bf + bf*SNP + age + sex
# Function for intelligence
formula_age_sex <- function(
SNP_name,
principal_components){
model <- formula(
paste("fluid_intelligence ~",
# SNP
SNP_name,
# Main covariates
"+ sex + age + delivery +",
paste0(SNP_name, "*breastfed_as_a_baby")
))
}
## Outcome ~ SNP + bf + bf*SNP + age + sex + pairwise interactions across covariates
# Function for intelligence
formula_age_sex_pw_interaction <- function(
SNP_name,
principal_components){
formula(
paste("fluid_intelligence ~",
# SNP
SNP_name,
# Main covariates
"+ sex + age + delivery +",
# Interaction with SNP:
# - Sex
# - Age
# - Breastfeeding
paste0(SNP_name, "*breastfed_as_a_baby"), "+",
paste(
paste0("PC", 1:principal_components),
collapse = " + ")
))
}
### Outcome ~ SNP + bf + SNP*bf + age + sex + PCS + interactions
# Function for intelligence
formula_age_sex_PCs_pw_interaction <- function(
SNP_name,
principal_components){
formula(
paste("fluid_intelligence ~",
# SNP
SNP_name,
# Main covariates
"+ sex + age + delivery +",
# Interaction with SNP:
# - Sex
# - Age
# - Breastfeeding
paste0("sex*", SNP_name), "+",
paste0("age*",SNP_name), "+",
paste0(SNP_name, "*breastfed_as_a_baby"), "+",
# Interaction across covariates
"breastfed_as_a_baby*sex", "+",
"breastfed_as_a_baby*age", "+",
"sex*age", "+",
# PCs
paste(
paste0("PC", 1:principal_components),
collapse = " + "), "+",
# Interaction with pcs
# - breastfeeding
paste0(
paste0("PC", 1:principal_components),
"*breastfed_as_a_baby", collapse = " + "), "+",
# - SNP
paste0(
paste0("PC", 1:principal_components),
"*", SNP_name, collapse = " + "), "+",
# - sex
paste0(
paste0("PC", 1:principal_components),
"*sex", collapse = " + "), "+",
# - age
paste0(
paste0("PC", 1:principal_components),
"*age", collapse = " + ")
))
}
combine_SD <- function(n1, n2, m1, m2, sd1, sd2){
sqrt(
(((n1-1)*(sd1^2))+((n2-1)*(sd2^2))+((n1*n2)/(n1+n2))*((m1^2)+(m2^2)-(2*m1*m2)))/(n1+n2-1)
)
}
calculate_variance <- function(data){
# Define means
y00 <- data["y00", "mean"]
y01 <- data["y01", "mean"]
y10 <- data["y10", "mean"]
y11 <- data["y11", "mean"]
# Define N
N00 <- data["y00", "n"]
N01 <- data["y01", "n"]
N10 <- data["y10", "n"]
N11 <- data["y11", "n"]
# Define variances
vary00 <- data["y00", "variance"]
vary01 <- data["y01", "variance"]
vary10 <- data["y10", "variance"]
vary11 <- data["y11", "variance"]
# Effect size estimates derived from group means
b1 <- y10 - y00
b2 <- y01 - y00
bint <- y11 - y01 - y10 + y00
# Std errors of effect estimates
se_b1 <- sqrt(vary10/N10 + vary00/N00)
se_b2 <- sqrt(vary01/N01 + vary00/N00)
se_bint <- sqrt(vary00/N00 + vary01/N01 + vary10/N10 + vary11/N11)
tibble(term = c("Main effect of rs174575", "Breastfeeding estimate", "Breastfeeding-by-rs174575"),
estimate = c(b1, b2, bint),
std.error = c(se_b1, se_b2, se_bint))
}
combine_mean_sd <-
function(data){
data %>%
mutate(breastfed = as.numeric(breastfed == "y")) %>% # god I hate coercion
group_by(breastfed, GG) %>%
transmute(GG,
breastfed,
mean = weighted.mean(y_mean, n),
SD = case_when(
genotype == "GG" ~ y_SD,
TRUE ~ combine_SD(first(n), last(n),
first(y_mean), last(y_mean),
first(y_SD), last(y_SD))
),
# NOTE this *must* be last or it will mask the other N!
n = sum(n)) %>%
distinct() %>%
ungroup() %>%
# Create row names in the format (y, GG = [0,1], breastfed = [0,1])
mutate(rowname = stringi::stri_paste("y", GG, breastfed),
variance = SD^2) %>%
column_to_rownames() %>%
select(n, mean, SD, variance)
}
data_dunedin_mean_sd <-
tribble(
~genotype,~breastfed,~n,~y_mean,~GG, ~y_SD,
"CC", "y", 238, 103.2, 0, 13.9,
"CG", "y", 201, 104.0, 0, 13.4,
"GG", "y", 48,  98.9,  1, 13.8,
"CC", "n", 183, 98.4,  0, 15.2,
"CG", "n", 153, 95.8,  0, 12.4,
"GG", "n", 35, 100.3,  1, 11.2
)
data_erisk_mean_sd <-
tribble(
~genotype,~breastfed,~n,~y_mean,~GG, ~y_SD,
"CC", "y", 488,   104,  0, 15.0,
"CG", "y", 337, 104.6,  0, 15.3,
"GG", "y",  63, 100.7,  1, 17.3,
"CC", "n", 524,  97.3,  0, 14.1,
"CG", "n", 375,  97.2,  0, 13.9,
"GG", "n",  61,  99.9,  1, 15.3
)
interaction_coeff_dunedin <-
data_dunedin_mean_sd %>%
combine_mean_sd() %>%
calculate_variance() %>%
mutate(variant = "rs174575",
study = "Caspi et al. (Dunedin, 1)",
estimate = estimate/15,
std.error = std.error/15) %>%
filter(term != "Breastfeeding estimate")
interaction_coeff_erisk <-
data_erisk_mean_sd %>%
combine_mean_sd() %>%
calculate_variance() %>%
mutate(variant = "rs174575",
study = "Caspi et al. (E-risk, 1)",
estimate = estimate/15,
std.error = std.error/15) %>%
filter(term != "Breastfeeding estimate")
interaction_coeff_steer <-
tribble(
~variant, ~term, ~estimate, ~std.error, ~study,
# NOTE: IQ SD of this sample is 16
# We transform raw coeff in z scores by dividing by the phenotype SD
# NOTE: SE = (upper limit - lower limit) / 3.92
"rs174575", "Main effect of rs174575", 0.17/16, ((1.90+1.57)/3.92)/16, "Steer et al. (ALSPAC, 1)",
"rs174575", "Breastfeeding-by-rs174575", 5.78/16, ((10.12-1.43)/3.92)/16, "Steer et al. (ALSPAC, 1)",
"rs1535", "Main effect of rs174575", 0.10/16, ((1.51+1.32)/3.92)/16, "Steer et al. (ALSPAC, 1)",
"rs1535", "Breastfeeding-by-rs174575", 4.01/16, ((7.66-0.36)/3.92)/16, "Steer et al. (ALSPAC, 1)",
)
interaction_coeff_hartwig <-
tribble(
~variant, ~estimate, ~std.error, ~study,
# NOTE: SE = (upper limit - lower limit) / 3.92
"rs174575", 0.04, (0.21-0.12)/3.92, "Hartwig et al. (fixed-effect, 3)",
"rs174575", 0.07, (0.43-0.29)/3.92, "Hartwig et al. (random-effect, 3)",
"rs1535", -0.02, (0.11-0.16)/3.92, "Hartwig et al. (fixed-effect, 3)",
"rs1535", -0.03, (0.21-0.28)/3.92, "Hartwig et al. (random-effect, 3)"
) %>%
mutate(term = "Breastfeeding-by-rs174575")
# Models for FI
model_unadj <-
map(
variants_recessive,
\(SNP)
data_fluid_intelligence %>%
lm(formula_unadj(SNP), data = .) %>%
broom::tidy() %>%
filter(
stri_detect_regex(term, "rs[0-9]+\\_..:breastfed_as_a_baby") |
stri_detect_regex(term, paste0("^", SNP, "$"))
) %>%
mutate(variant = stri_extract_first_regex(SNP, "^rs[0-9]+"),
term = stri_replace_first_regex(term, "rs[0-9]+\\_..:breastfed_as_a_baby", "Breastfeeding-by-rs174575"),
term = stri_replace_first_regex(term, "^rs[0-9]+_..", "Main effect of rs174575")
) %>%
select(variant, term, estimate, std.error)
) %>%
bind_rows() %>%
mutate(study = "UK Biobank (1)")
model_age_sex <-
map(
variants_recessive,
\(SNP)
data_fluid_intelligence %>%
lm(formula_age_sex(SNP, principal_components = 40), data = .) %>%
broom::tidy() %>%
filter(
stri_detect_regex(term, "rs[0-9]+\\_..:breastfed_as_a_baby") |
stri_detect_regex(term, paste0("^", SNP, "$"))
) %>%
mutate(variant = stri_extract_first_regex(SNP, "^rs[0-9]+"),
term = stri_replace_first_regex(term, "rs[0-9]+\\_..:breastfed_as_a_baby", "Breastfeeding-by-rs174575"),
term = stri_replace_first_regex(term, "^rs[0-9]+_..", "Main effect of rs174575")
) %>%
select(variant, term, estimate, std.error)
) %>%
bind_rows() %>%
mutate(study = "UK Biobank (2)")
model_age_sex_pw_interactions <-
map(
variants_recessive,
\(SNP)
data_fluid_intelligence %>%
lm(formula_age_sex_pw_interaction(SNP, principal_components = 40), data = .) %>%
broom::tidy() %>%
filter(
stri_detect_regex(term, "rs[0-9]+\\_..:breastfed_as_a_baby") |
stri_detect_regex(term, paste0("^", SNP, "$"))
) %>%
mutate(variant = stri_extract_first_regex(SNP, "^rs[0-9]+"),
term = stri_replace_first_regex(term, "rs[0-9]+\\_..:breastfed_as_a_baby", "Breastfeeding-by-rs174575"),
term = stri_replace_first_regex(term, "^rs[0-9]+_..", "Main effect of rs174575")
) %>%
select(variant, term, estimate, std.error)
) %>%
bind_rows() %>%
mutate(study = "UK Biobank (3)")
model_age_sex_PCs_pw_interactions <-
map(
variants_recessive,
\(SNP)
data_fluid_intelligence %>%
lm(formula_age_sex_PCs_pw_interaction(SNP, principal_components = 40), data = .) %>%
broom::tidy() %>%
filter(
stri_detect_regex(term, "rs[0-9]+\\_..:breastfed_as_a_baby") |
stri_detect_regex(term, paste0("^", SNP, "$"))
) %>%
mutate(variant = stri_extract_first_regex(SNP, "^rs[0-9]+"),
term = stri_replace_first_regex(term, "rs[0-9]+\\_..:breastfed_as_a_baby", "Breastfeeding-by-rs174575"),
term = stri_replace_first_regex(term, "^rs[0-9]+_..", "Main effect of rs174575")
) %>%
select(variant, term, estimate, std.error)
) %>%
bind_rows() %>%
mutate(study = "UK Biobank (4)")
fp_interaction_iq_data_recessive <-
bind_rows(model_unadj, model_age_sex, model_age_sex_pw_interactions, model_age_sex_PCs_pw_interactions)
# Show forest plot
bind_rows(interaction_coeff_erisk,
interaction_coeff_dunedin,
interaction_coeff_steer,
interaction_coeff_hartwig,
fp_interaction_iq_data_recessive) %>%
filter(variant == "rs174575") %>% #rs174575 only
ggplot(aes(y = fct_inorder(study) %>% fct_rev, x = estimate, colour = TRUE))+
geom_pointrange(
aes(
xmin=estimate-1.96*std.error, xmax = estimate + 1.96*std.error),
position = position_dodge(width=0.6),
#shape = 3,
size = 2,
fatten = 1,
linewidth = 1) +
facet_grid(~fct_rev(term)) +
geom_vline(linetype = 3,
xintercept = 0)+
theme_bw() +
theme(text = element_text(size = 16),
legend.position = "",
axis.text=element_text(size=)
)+
#scale_colour_manual(values = "#51247A")+ # UQ colour
scale_colour_manual(values = colours_uq("main"))+
labs(#title = "UKB Verbal-numerical reasoning effect estimates compared to previous literature",
#caption = stringr::str_wrap("(1) Unadjusted; (2) adjusted for age and sex; (3) adjusted for age, sex, and principal components; (4) adjusted for age, sex, principal components, and pairwise interactions across all covariates"),
#subtitle = "Error bars represent 95% confidence intervals",
x = "Regression coefficient",
y = "")
colours_uq()
# Show forest plot
bind_rows(interaction_coeff_erisk,
interaction_coeff_dunedin,
interaction_coeff_steer,
interaction_coeff_hartwig,
fp_interaction_iq_data_recessive) %>%
filter(variant == "rs174575") %>% #rs174575 only
ggplot(aes(y = fct_inorder(study) %>% fct_rev, x = estimate, colour = TRUE))+
geom_pointrange(
aes(
xmin=estimate-1.96*std.error, xmax = estimate + 1.96*std.error),
position = position_dodge(width=0.6),
#shape = 3,
size = 2,
fatten = 1,
linewidth = 1) +
facet_grid(~fct_rev(term)) +
geom_vline(linetype = 3,
xintercept = 0)+
theme_bw() +
theme(text = element_text(size = 16),
legend.position = "",
axis.text=element_text(size=)
)+
scale_colour_manual(values = "#51247AFF")+ # UQ colour
#scale_colour_manual(values = "black")+
labs(#title = "UKB Verbal-numerical reasoning effect estimates compared to previous literature",
#caption = stringr::str_wrap("(1) Unadjusted; (2) adjusted for age and sex; (3) adjusted for age, sex, and principal components; (4) adjusted for age, sex, principal components, and pairwise interactions across all covariates"),
#subtitle = "Error bars represent 95% confidence intervals",
x = "Regression coefficient",
y = "")
# Show forest plot
bind_rows(interaction_coeff_erisk,
interaction_coeff_dunedin,
interaction_coeff_steer,
interaction_coeff_hartwig,
fp_interaction_iq_data_recessive) %>%
filter(variant == "rs174575") %>% #rs174575 only
ggplot(aes(y = fct_inorder(study) %>% fct_rev, x = estimate, colour = TRUE))+
geom_pointrange(
aes(
xmin=estimate-1.96*std.error, xmax = estimate + 1.96*std.error),
position = position_dodge(width=0.6),
#shape = 3,
size = 2,
fatten = 1,
linewidth = 1) +
facet_grid(~fct_rev(term)) +
geom_vline(linetype = 3,
xintercept = 0)+
theme_bw() +
theme(text = element_text(size = 16),
legend.position = "",
axis.text=element_text(size=)
)+
scale_colour_manual(values = "#51247AFF")+ # UQ colour
#scale_colour_manual(values = "black")+
labs(#title = "UKB Verbal-numerical reasoning effect estimates compared to previous literature",
#caption = stringr::str_wrap("(1) Unadjusted; (2) adjusted for age and sex; (3) adjusted for age, sex, and principal components; (4) adjusted for age, sex, principal components, and pairwise interactions across all covariates"),
#subtitle = "Error bars represent 95% confidence intervals",
x = "Regression coefficient (z-scores)",
y = "")
#base::load(snakemake@input[[2]])
base::load("../../temp/clean/any_ancestry/model_summaries_additive.RData")
strata_lookup <- c("Yes" = "Breastfed",
"No" = "Bottlefed",
"Missing" = "Missing")
summary_stats_plots <-
summary_stats_plots%>%
mutate(variant = stringi::stri_extract_first_regex(variant, "rs.+[0-9]"),
stratum = recode(stratum, !!!strata_lookup))
summary_stats_plots %>%
filter(outcome %in% cognitive_measures,
variant == "rs1535") %>%
ggplot(aes(x = outcome, y = estimate)) +
geom_pointrange(aes(colour = stratum,
group = variant,
ymin = estimate - 1.96*std.error,
ymax = estimate + 1.96*std.error),
position = position_dodge2(width = 0.8),
fatten = 0,
shape = 3
) +
scale_y_continuous()+
facet_grid(~ covariates) +
theme_bw() +
#ggsci::scale_colour_npg()+
ggplot2::discrete_scale("colour", "uq", palette_constructor(colours = colours_uq("Red", "Aqua", "Green", "Blue", palette = "secondary"), type = "discrete"))+
labs(#title = "SNP effect estimate by breastfeeding status",
#subtitle = "Error bars represent 95% confidence intervals",
colour = "Breastfeeding status",
y = "Regression coefficient (z-scores)",
x = "") +
theme(axis.text.x = element_text(angle = 45, hjust=1),
legend.position = "bottom",
plot.margin = margin(10,10,10,50))+
geom_hline(yintercept = 0, linetype = "dashed", colour = "darkgrey")
